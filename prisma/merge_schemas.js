const fs = require('fs');
const path = require('path');

// List of schema files in the order they should be merged
const schemaFiles = [
  'base.prisma',          // Core configuration and base models
  'users.prisma',         // User-related models (Staff, Student, Parent)
  'academic.prisma',      // Academic models (Class, Subject, Assignment, etc.)
  'communication.prisma', // Messaging, notifications, events
  'finance.prisma',       // Payment, invoice, and fee management
  'library.prisma',       // Library and resource management
  'transport.prisma',     // Transport and inventory
  'forum.prisma',         // Forum and community features
  'analytics.prisma',     // Analytics, reports, and settings
  'settings_models.prisma' // System and notification settings
];

// Output file
const outputFile = 'schema.prisma';

// Header for the output file
let mergedContent = `// AUTO-GENERATED SCHEMA FILE
// This file is automatically generated by merge_schemas.js
// Do not edit this file directly. Instead, edit the individual schema files.
// Last updated: ${new Date().toISOString()}

`;

// Track if any files were not found
let missingFiles = [];

// Process each schema file
schemaFiles.forEach(file => {
  const filePath = path.join(__dirname, file);
  
  // Check if file exists
  if (!fs.existsSync(filePath)) {
    console.warn(`‚ö†Ô∏è  Warning: ${file} not found, skipping...`);
    missingFiles.push(file);
    return;
  }
  
  console.log(`üîπ Merging ${file}...`);
  
  // Add file header
  mergedContent += `// ====================================
// ${file}
// ====================================\n\n`;
  
  // Read and add file content
  try {
    const fileContent = fs.readFileSync(filePath, 'utf8');
    mergedContent += fileContent + '\n\n';
  } catch (error) {
    console.error(`‚ùå Error reading ${file}:`, error.message);
    process.exit(1);
  }
});

// Write the merged content to schema.prisma
try {
  fs.writeFileSync(path.join(__dirname, outputFile), mergedContent);
  
  // Print summary
  console.log('\n‚úÖ Successfully merged schemas:');
  schemaFiles.forEach(file => {
    const status = missingFiles.includes(file) ? '‚ùå Missing' : '‚úì';
    console.log(`  ${status} ${file}`);
  });
  
  if (missingFiles.length > 0) {
    console.log('\n‚ö†Ô∏è  Warning: Some schema files were not found. The generated schema may be incomplete.');
  }
  
  console.log(`\nüìÑ Output file: ${path.join(__dirname, outputFile)}`);
  console.log('\nNext steps:');
  console.log('1. Review the generated schema.prisma file');
  console.log('2. Run: npx prisma generate');
  console.log('3. Run: npx prisma migrate dev --name init');
} catch (error) {
  console.error('‚ùå Error writing schema file:', error.message);
  process.exit(1);
}
